<?php

namespace App\Http\Controllers;

use Illuminate\Http\Request;
use App\Models\ProductGroup;
use App\Models\ProductGroupTranslation;
use App\Models\Product;
use Illuminate\Support\Str;

class ProductGroupController extends Controller
{
    /**
     * Display a listing of the resource.
     *
     * @return \Illuminate\Http\Response
     */
    public function index(Request $request)
    {
		
        $sort_search =null;
		
        $brands = ProductGroup::orderBy('name', 'asc');
		
        if ($request->has('search')){
            $sort_search = $request->search;
            $brands = $brands->where('name', 'like', '%'.$sort_search.'%');
        }
        $brands = $brands->paginate(15);
		
        return view('backend.product.product_groups.index', compact('brands', 'sort_search'));
    }

    /**
     * Show the form for creating a new resource.
     *
     * @return \Illuminate\Http\Response
     */
    public function create()
    {
    }

    /**
     * Store a newly created resource in storage.
     *
     * @param  \Illuminate\Http\Request  $request
     * @return \Illuminate\Http\Response
     */
    public function store(Request $request)
    {
        $brand = new ProductGroup;
        $brand->name = $request->name;
        
        $brand->save();
		
		$brand_translation = ProductGroupTranslation::firstOrNew(['lang' => env('DEFAULT_LANGUAGE'), 'product_group_id' => $brand->id]);
        $brand_translation->name = $request->name;
        $brand_translation->save();

        flash(translate('Product group has been inserted successfully'))->success();
        return redirect()->route('product-groups.index');

    }

    /**
     * Display the specified resource.
     *
     * @param  int  $id
     * @return \Illuminate\Http\Response
     */
    public function show($id)
    {
        //
    }

    /**
     * Show the form for editing the specified resource.
     *
     * @param  int  $id
     * @return \Illuminate\Http\Response
     */
    public function edit(Request $request, $id)
    {
        $lang   = $request->lang;
        $brand  = ProductGroup::findOrFail($id);
		
        return view('backend.product.product_groups.edit', compact('brand','lang'));
    }

    /**
     * Update the specified resource in storage.
     *
     * @param  \Illuminate\Http\Request  $request
     * @param  int  $id
     * @return \Illuminate\Http\Response
     */
    public function update(Request $request, $id)
    {
        $brand = ProductGroup::findOrFail($id);
        if($request->lang == env("DEFAULT_LANGUAGE")){
            $brand->name = $request->name;
        }
       
        $brand->save();

		$brand_translation = ProductGroupTranslation::firstOrNew(['lang' => $request->lang, 'product_group_id' => $brand->id]);
        $brand_translation->name = $request->name;
        $brand_translation->save();
        
        flash(translate('Product group has been updated successfully'))->success();
        return back();

    }

    /**
     * Remove the specified resource from storage.
     *
     * @param  int  $id
     * @return \Illuminate\Http\Response
     */
    public function destroy($id)
    {
        $brand = ProductGroup::findOrFail($id);
        
		 foreach ($brand->brand_translations as $key => $brand_translation) {
            $brand_translation->delete();
        }
		
        ProductGroup::destroy($id);

        flash(translate('Product group has been deleted successfully'))->success();
        return redirect()->route('product-groups.index');

    }
}
